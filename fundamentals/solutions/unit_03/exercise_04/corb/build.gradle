plugins {
  id "net.saliman.properties" version "1.5.1"
  id "com.marklogic.ml-gradle" version "4.8.0"
}

repositories {
  mavenCentral()

  // Needed for some mlcp dependencies, such as commons-csv:1.5.1-marklogic
  maven { url "https://developer.marklogic.com/maven2/" }
}


configurations {
  mlcp
}

configurations {
  mlcp
  corb {
    attributes {
      attribute(Usage.USAGE_ATTRIBUTE, objects.named(Usage, Usage.JAVA_RUNTIME))
    }
  }
}

dependencies {
  mlcp('com.marklogic:mlcp:11.2.0') {
    exclude group: 'log4j', module: 'log4j'
  }

  /**
   * mlcp uses Log4j for logging, and if Log4j can't find a configuration file, it will complain and you'll
   * get none of mlcp's usually-useful logging. It is recommended then that your Gradle configuration for
   * mlcp include a directory or some other resource that provides a log4j.properties file.
   */
  mlcp files("lib")
  
  corb "com.marklogic:marklogic-corb:2.5.6"
  corb 'com.marklogic:marklogic-xcc:11.2.0'
}

/**
 * Load the characters folder
 */
task importCharacters(type: com.marklogic.gradle.task.MlcpTask) {
  classpath = configurations.mlcp
  command = "IMPORT"
  port = mlAppConfig.restPort
  output_collections = "star-wars,characters"
  input_file_path = "/home/cent/Desktop/fundamentals/data/star-wars/characters/"
  output_uri_replace = ".*characters,'/characters'"
}

/**
 * Load the images folder
 */
task importImages(type: com.marklogic.gradle.task.MlcpTask) {
  classpath = configurations.mlcp
  command = "IMPORT"
  port = mlAppConfig.restPort
  output_collections = "star-wars,images"
  input_file_path = "/home/cent/Desktop/fundamentals/data/star-wars/images/"
  output_uri_replace = ".*images,'/images'"
  transform_module = "/mlcp/extractMetadata.sjs"
  transform_function = "transform"
}

/**
 * Load triples
 */
task importTriples(type: com.marklogic.gradle.task.MlcpTask) {
  classpath = configurations.mlcp
  command = "IMPORT"
  port = mlAppConfig.restPort
  output_collections = "star-wars,triples"
  input_file_path = "/home/cent/Desktop/fundamentals/data/triples/"
  input_file_type = "rdf"
}

/**
 * Load a delimited file
 */
task importCsv(type: com.marklogic.gradle.task.MlcpTask) {
  classpath = configurations.mlcp
  command = "IMPORT"
  // we are not specifying a port, this will go to Documents by default.
  output_collections = "mountaintop,employee"
  output_permissions = "rest-reader,read,rest-writer,update"
  input_file_path = "/home/cent/Desktop/fundamentals/data/mountaintop/employee/"
  input_file_type = "delimited_text"
  uri_id = "emp_id"
  output_uri_prefix = '/employee/'
  output_uri_suffix = '.json'
  document_type = "json"
}

task corbSetPermissions(type: com.marklogic.gradle.task.CorbTask) {
  xccConnectionUri = "xcc://${mlUsername}:${mlPassword}@${mlHost}:${mlRestPort}"
  urisModule = "/corb2/permissions/uris.sjs"
  processModule = "/corb2/permissions/transform.sjs"
}

task corbSetEnvelope(type: com.marklogic.gradle.task.CorbTask) {
  xccConnectionUri = "xcc://${mlUsername}:${mlPassword}@${mlHost}:8000"
  urisModule = "src/main/ml-modules/root/corb2/employees/uris.sjs|ADHOC"
  processModule = "src/main/ml-modules/root/corb2/employees/envelope.sjs|ADHOC"
}